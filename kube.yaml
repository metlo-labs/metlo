apiVersion: v1
kind: Namespace
metadata:
  name: test-deployment
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
  namespace: test-deployment
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: admin-user
    namespace: test-deployment
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: test-deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metlo-app
  namespace: test-deployment
  labels:
    app: metlo-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: metlo-app
  template:
    metadata:
      labels:
        app: metlo-app
    spec:
      containers:
        - name: metlo-app
          image: jmalloc/echo-server
          ports:
            - containerPort: 5678
          args:
            - PORT=5678
      # containers:
      #   - name: metlo-app
      #     image: ealen/echo-server
      #     ports:
      #       - containerPort: 80
      #     env:
      #       - name: PORT
      #         value: "80"
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver
  namespace: test-deployment
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
  selector:
    app: metlo-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echoserver
  namespace: test-deployment
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "hello-world.info"
      http:
        paths:
          - path: /echo
            pathType: Prefix
            backend:
              service:
                name: echoserver
                port:
                  number: 5678
---
kind: Service
apiVersion: v1
metadata:
  name: metlo-service
  namespace: test-deployment
spec:
  selector:
    app: metlo-app
  ports:
    # Default port used by the image
    - port: 5678
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metlo-ingress
  namespace: test-deployment
spec:
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/metlo"
            backend:
              service:
                name: metlo-service
                port:
                  number: 5678
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metlo-app
  namespace: test-deployment
spec:
  selector:
    matchLabels:
      name: metlo-app
  template:
    metadata:
      labels:
        name: metlo-app
    spec:
      tolerations:
        # this toleration is to have the daemonset runnable on master nodes
        # remove it if your masters can't run pods
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: suricata-daemon
          image: suricata-daemon:latest
          imagePullPolicy: Never
          resources:
            requests:
              ephemeral-storage: "32Mi"
            limits:
              ephemeral-storage: "64Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /tmp
              name: socket-volume
          env:
            - name: METLO_ADDR
              value: https://eoene6b90uzny1h.m.pipedream.net
            - name: METLO_KEY
              value: abcd
      volumes:
        - name: socket-volume
          emptyDir: {}