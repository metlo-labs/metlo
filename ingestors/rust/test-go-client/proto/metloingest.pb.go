// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/metloingest.proto

package metloingest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyVal) Reset() {
	*x = KeyVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyVal) ProtoMessage() {}

func (x *KeyVal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyVal.ProtoReflect.Descriptor instead.
func (*KeyVal) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{0}
}

func (x *KeyVal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeyVal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ApiUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string    `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Path       string    `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Parameters []*KeyVal `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *ApiUrl) Reset() {
	*x = ApiUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiUrl) ProtoMessage() {}

func (x *ApiUrl) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiUrl.ProtoReflect.Descriptor instead.
func (*ApiUrl) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{1}
}

func (x *ApiUrl) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ApiUrl) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApiUrl) GetParameters() []*KeyVal {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type ApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method  string    `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url     *ApiUrl   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Headers []*KeyVal `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	Body    *string   `protobuf:"bytes,4,opt,name=body,proto3,oneof" json:"body,omitempty"`
}

func (x *ApiRequest) Reset() {
	*x = ApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiRequest) ProtoMessage() {}

func (x *ApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiRequest.ProtoReflect.Descriptor instead.
func (*ApiRequest) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{2}
}

func (x *ApiRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiRequest) GetUrl() *ApiUrl {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *ApiRequest) GetHeaders() []*KeyVal {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ApiRequest) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

type ApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Headers []*KeyVal `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	Body    *string   `protobuf:"bytes,3,opt,name=body,proto3,oneof" json:"body,omitempty"`
}

func (x *ApiResponse) Reset() {
	*x = ApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponse) ProtoMessage() {}

func (x *ApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponse.ProtoReflect.Descriptor instead.
func (*ApiResponse) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{3}
}

func (x *ApiResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ApiResponse) GetHeaders() []*KeyVal {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ApiResponse) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

type ApiMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment     string `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	Incoming        bool   `protobuf:"varint,2,opt,name=incoming,proto3" json:"incoming,omitempty"`
	Source          string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	SourcePort      int32  `protobuf:"varint,4,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	Destination     string `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
	DestinationPort int32  `protobuf:"varint,6,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
}

func (x *ApiMeta) Reset() {
	*x = ApiMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiMeta) ProtoMessage() {}

func (x *ApiMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiMeta.ProtoReflect.Descriptor instead.
func (*ApiMeta) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{4}
}

func (x *ApiMeta) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *ApiMeta) GetIncoming() bool {
	if x != nil {
		return x.Incoming
	}
	return false
}

func (x *ApiMeta) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ApiMeta) GetSourcePort() int32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *ApiMeta) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *ApiMeta) GetDestinationPort() int32 {
	if x != nil {
		return x.DestinationPort
	}
	return 0
}

type ApiTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request  *ApiRequest  `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Response *ApiResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Meta     *ApiMeta     `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *ApiTrace) Reset() {
	*x = ApiTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiTrace) ProtoMessage() {}

func (x *ApiTrace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiTrace.ProtoReflect.Descriptor instead.
func (*ApiTrace) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{5}
}

func (x *ApiTrace) GetRequest() *ApiRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ApiTrace) GetResponse() *ApiResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ApiTrace) GetMeta() *ApiMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type RepeatedString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepString []string `protobuf:"bytes,1,rep,name=rep_string,json=repString,proto3" json:"rep_string,omitempty"`
}

func (x *RepeatedString) Reset() {
	*x = RepeatedString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedString) ProtoMessage() {}

func (x *RepeatedString) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedString.ProtoReflect.Descriptor instead.
func (*RepeatedString) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{6}
}

func (x *RepeatedString) GetRepString() []string {
	if x != nil {
		return x.RepString
	}
	return nil
}

type SqliRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Fingerprint string `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
}

func (x *SqliRes) Reset() {
	*x = SqliRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqliRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqliRes) ProtoMessage() {}

func (x *SqliRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqliRes.ProtoReflect.Descriptor instead.
func (*SqliRes) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{7}
}

func (x *SqliRes) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SqliRes) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

type ProcessTraceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block                 bool                       `protobuf:"varint,1,opt,name=block,proto3" json:"block,omitempty"`
	XssDetected           map[string]string          `protobuf:"bytes,2,rep,name=xss_detected,json=xssDetected,proto3" json:"xss_detected,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SqliDetected          map[string]*SqliRes        `protobuf:"bytes,3,rep,name=sqli_detected,json=sqliDetected,proto3" json:"sqli_detected,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SensitiveDataDetected map[string]*RepeatedString `protobuf:"bytes,4,rep,name=sensitive_data_detected,json=sensitiveDataDetected,proto3" json:"sensitive_data_detected,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DataTypes             map[string]*RepeatedString `protobuf:"bytes,5,rep,name=data_types,json=dataTypes,proto3" json:"data_types,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProcessTraceRes) Reset() {
	*x = ProcessTraceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_metloingest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTraceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTraceRes) ProtoMessage() {}

func (x *ProcessTraceRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metloingest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTraceRes.ProtoReflect.Descriptor instead.
func (*ProcessTraceRes) Descriptor() ([]byte, []int) {
	return file_proto_metloingest_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessTraceRes) GetBlock() bool {
	if x != nil {
		return x.Block
	}
	return false
}

func (x *ProcessTraceRes) GetXssDetected() map[string]string {
	if x != nil {
		return x.XssDetected
	}
	return nil
}

func (x *ProcessTraceRes) GetSqliDetected() map[string]*SqliRes {
	if x != nil {
		return x.SqliDetected
	}
	return nil
}

func (x *ProcessTraceRes) GetSensitiveDataDetected() map[string]*RepeatedString {
	if x != nil {
		return x.SensitiveDataDetected
	}
	return nil
}

func (x *ProcessTraceRes) GetDataTypes() map[string]*RepeatedString {
	if x != nil {
		return x.DataTypes
	}
	return nil
}

var File_proto_metloingest_proto protoreflect.FileDescriptor

var file_proto_metloingest_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x65, 0x74, 0x6c, 0x6f,
	0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x06, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x06, 0x41, 0x70,
	0x69, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x17,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x76, 0x0a, 0x0b, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f,
	0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x41, 0x70, 0x69,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x08, 0x41, 0x70, 0x69,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74,
	0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x3f, 0x0a, 0x07, 0x53, 0x71, 0x6c,
	0x69, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0xe4, 0x05, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x50, 0x0a, 0x0c, 0x78, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x65, 0x74,
	0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x2e, 0x58, 0x73, 0x73, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x78, 0x73, 0x73, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x0d, 0x73, 0x71, 0x6c, 0x69, 0x5f, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x2e, 0x53, 0x71, 0x6c, 0x69,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x73,
	0x71, 0x6c, 0x69, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x6f, 0x0a, 0x17, 0x73,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d,
	0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x58, 0x73, 0x73, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x55, 0x0a, 0x11, 0x53, 0x71, 0x6c, 0x69,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x71, 0x6c,
	0x69, 0x52, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x65, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x59, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x6c,
	0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x32, 0x52, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x6c, 0x6f, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x12, 0x43, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x12, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x41,
	0x70, 0x69, 0x54, 0x72, 0x61, 0x63, 0x65, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x42, 0x2d, 0x5a, 0x2b, 0x74, 0x65, 0x73, 0x74, 0x2d, 0x72, 0x75,
	0x73, 0x74, 0x2e, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x6c, 0x6f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f, 0x6d, 0x65, 0x74, 0x6c, 0x6f, 0x69, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_metloingest_proto_rawDescOnce sync.Once
	file_proto_metloingest_proto_rawDescData = file_proto_metloingest_proto_rawDesc
)

func file_proto_metloingest_proto_rawDescGZIP() []byte {
	file_proto_metloingest_proto_rawDescOnce.Do(func() {
		file_proto_metloingest_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_metloingest_proto_rawDescData)
	})
	return file_proto_metloingest_proto_rawDescData
}

var file_proto_metloingest_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_metloingest_proto_goTypes = []interface{}{
	(*KeyVal)(nil),          // 0: metloingest.KeyVal
	(*ApiUrl)(nil),          // 1: metloingest.ApiUrl
	(*ApiRequest)(nil),      // 2: metloingest.ApiRequest
	(*ApiResponse)(nil),     // 3: metloingest.ApiResponse
	(*ApiMeta)(nil),         // 4: metloingest.ApiMeta
	(*ApiTrace)(nil),        // 5: metloingest.ApiTrace
	(*RepeatedString)(nil),  // 6: metloingest.RepeatedString
	(*SqliRes)(nil),         // 7: metloingest.SqliRes
	(*ProcessTraceRes)(nil), // 8: metloingest.ProcessTraceRes
	nil,                     // 9: metloingest.ProcessTraceRes.XssDetectedEntry
	nil,                     // 10: metloingest.ProcessTraceRes.SqliDetectedEntry
	nil,                     // 11: metloingest.ProcessTraceRes.SensitiveDataDetectedEntry
	nil,                     // 12: metloingest.ProcessTraceRes.DataTypesEntry
}
var file_proto_metloingest_proto_depIdxs = []int32{
	0,  // 0: metloingest.ApiUrl.parameters:type_name -> metloingest.KeyVal
	1,  // 1: metloingest.ApiRequest.url:type_name -> metloingest.ApiUrl
	0,  // 2: metloingest.ApiRequest.headers:type_name -> metloingest.KeyVal
	0,  // 3: metloingest.ApiResponse.headers:type_name -> metloingest.KeyVal
	2,  // 4: metloingest.ApiTrace.request:type_name -> metloingest.ApiRequest
	3,  // 5: metloingest.ApiTrace.response:type_name -> metloingest.ApiResponse
	4,  // 6: metloingest.ApiTrace.meta:type_name -> metloingest.ApiMeta
	9,  // 7: metloingest.ProcessTraceRes.xss_detected:type_name -> metloingest.ProcessTraceRes.XssDetectedEntry
	10, // 8: metloingest.ProcessTraceRes.sqli_detected:type_name -> metloingest.ProcessTraceRes.SqliDetectedEntry
	11, // 9: metloingest.ProcessTraceRes.sensitive_data_detected:type_name -> metloingest.ProcessTraceRes.SensitiveDataDetectedEntry
	12, // 10: metloingest.ProcessTraceRes.data_types:type_name -> metloingest.ProcessTraceRes.DataTypesEntry
	7,  // 11: metloingest.ProcessTraceRes.SqliDetectedEntry.value:type_name -> metloingest.SqliRes
	6,  // 12: metloingest.ProcessTraceRes.SensitiveDataDetectedEntry.value:type_name -> metloingest.RepeatedString
	6,  // 13: metloingest.ProcessTraceRes.DataTypesEntry.value:type_name -> metloingest.RepeatedString
	5,  // 14: metloingest.MetloIngest.ProcessTrace:input_type -> metloingest.ApiTrace
	8,  // 15: metloingest.MetloIngest.ProcessTrace:output_type -> metloingest.ProcessTraceRes
	15, // [15:16] is the sub-list for method output_type
	14, // [14:15] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_metloingest_proto_init() }
func file_proto_metloingest_proto_init() {
	if File_proto_metloingest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_metloingest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_metloingest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_metloingest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_metloingest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_metloingest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_metloingest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_metloingest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_metloingest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqliRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_metloingest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTraceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_metloingest_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_metloingest_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_metloingest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_metloingest_proto_goTypes,
		DependencyIndexes: file_proto_metloingest_proto_depIdxs,
		MessageInfos:      file_proto_metloingest_proto_msgTypes,
	}.Build()
	File_proto_metloingest_proto = out.File
	file_proto_metloingest_proto_rawDesc = nil
	file_proto_metloingest_proto_goTypes = nil
	file_proto_metloingest_proto_depIdxs = nil
}
